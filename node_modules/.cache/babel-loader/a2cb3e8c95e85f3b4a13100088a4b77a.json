{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\bfs-visualization\\\\src\\\\BFS\\\\BFS.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './BFS.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DUMMY_OBSTACLES = ['{\"q\":-15,\"r\":9,\"s\":6}', '{\"q\":-14,\"r\":9,\"s\":5}', '{\"q\":-13,\"r\":9,\"s\":4}', '{\"q\":-12,\"r\":9,\"s\":3}', '{\"q\":-11,\"r\":9,\"s\":2}', '{\"q\":-10,\"r\":9,\"s\":1}', '{\"q\":-9,\"r\":9,\"s\":0}', '{\"q\":-8,\"r\":9,\"s\":-1}', '{\"q\":-7,\"r\":9,\"s\":-2}', '{\"q\":-6,\"r\":9,\"s\":-3}', '{\"q\":-5,\"r\":9,\"s\":-4}', '{\"q\":-4,\"r\":9,\"s\":-5}', '{\"q\":-3,\"r\":9,\"s\":-6}', '{\"q\":-2,\"r\":9,\"s\":-7}', '{\"q\":-1,\"r\":9,\"s\":-8}', '{\"q\":0,\"r\":9,\"s\":-9}', '{\"q\":1,\"r\":9,\"s\":-10}', '{\"q\":2,\"r\":9,\"s\":-11}', '{\"q\":3,\"r\":9,\"s\":-12}', '{\"q\":4,\"r\":9,\"s\":-13}', '{\"q\":5,\"r\":9,\"s\":-14}', '{\"q\":6,\"r\":9,\"s\":-15}', '{\"q\":7,\"r\":8,\"s\":-15}', '{\"q\":7,\"r\":7,\"s\":-14}', '{\"q\":8,\"r\":6,\"s\":-14}', '{\"q\":8,\"r\":5,\"s\":-13}', '{\"q\":9,\"r\":4,\"s\":-13}', '{\"q\":9,\"r\":3,\"s\":-12}', '{\"q\":10,\"r\":2,\"s\":-12}', '{\"q\":11,\"r\":0,\"s\":-11}', '{\"q\":10,\"r\":1,\"s\":-11}', '{\"q\":11,\"r\":-1,\"s\":-10}', '{\"q\":12,\"r\":-2,\"s\":-10}', '{\"q\":12,\"r\":-3,\"s\":-9}', '{\"q\":13,\"r\":-4,\"s\":-9}', '{\"q\":13,\"r\":-5,\"s\":-8}', '{\"q\":14,\"r\":-6,\"s\":-8}', '{\"q\":14,\"r\":-7,\"s\":-7}', '{\"q\":15,\"r\":-8,\"s\":-7}', '{\"q\":15,\"r\":-9,\"s\":-6}', '{\"q\":14,\"r\":-9,\"s\":-5}', '{\"q\":13,\"r\":-9,\"s\":-4}', '{\"q\":12,\"r\":-9,\"s\":-3}', '{\"q\":11,\"r\":-9,\"s\":-2}', '{\"q\":9,\"r\":-9,\"s\":0}', '{\"q\":10,\"r\":-9,\"s\":-1}', '{\"q\":8,\"r\":-9,\"s\":1}', '{\"q\":7,\"r\":-9,\"s\":2}', '{\"q\":6,\"r\":-9,\"s\":3}', '{\"q\":5,\"r\":-9,\"s\":4}', '{\"q\":4,\"r\":-9,\"s\":5}', '{\"q\":2,\"r\":-9,\"s\":7}', '{\"q\":3,\"r\":-9,\"s\":6}', '{\"q\":1,\"r\":-9,\"s\":8}', '{\"q\":0,\"r\":-9,\"s\":9}', '{\"q\":-1,\"r\":-9,\"s\":10}', '{\"q\":-2,\"r\":-9,\"s\":11}', '{\"q\":-3,\"r\":-9,\"s\":12}', '{\"q\":-4,\"r\":-9,\"s\":13}', '{\"q\":-5,\"r\":-9,\"s\":14}', '{\"q\":-6,\"r\":-9,\"s\":15}', '{\"q\":-7,\"r\":-8,\"s\":15}', '{\"q\":-8,\"r\":-6,\"s\":14}', '{\"q\":-8,\"r\":-5,\"s\":13}', '{\"q\":-9,\"r\":-4,\"s\":13}', '{\"q\":-9,\"r\":-3,\"s\":12}', '{\"q\":-10,\"r\":-2,\"s\":12}', '{\"q\":-10,\"r\":-1,\"s\":11}', '{\"q\":-11,\"r\":0,\"s\":11}', '{\"q\":-11,\"r\":1,\"s\":10}', '{\"q\":-12,\"r\":2,\"s\":10}', '{\"q\":-12,\"r\":3,\"s\":9}', '{\"q\":-13,\"r\":4,\"s\":9}', '{\"q\":-13,\"r\":5,\"s\":8}', '{\"q\":-14,\"r\":6,\"s\":8}', '{\"q\":-14,\"r\":7,\"s\":7}', '{\"q\":-15,\"r\":8,\"s\":7}', '{\"q\":-7,\"r\":-7,\"s\":14}', '{\"q\":-6,\"r\":-7,\"s\":13}', '{\"q\":-6,\"r\":-6,\"s\":12}', '{\"q\":10,\"r\":-8,\"s\":-2}', '{\"q\":8,\"r\":-6,\"s\":-2}', '{\"q\":9,\"r\":-7,\"s\":-2}', '{\"q\":7,\"r\":-5,\"s\":-2}', '{\"q\":5,\"r\":-3,\"s\":-2}', '{\"q\":6,\"r\":-4,\"s\":-2}', '{\"q\":4,\"r\":-2,\"s\":-2}', '{\"q\":4,\"r\":1,\"s\":-5}', '{\"q\":5,\"r\":0,\"s\":-5}', '{\"q\":6,\"r\":-1,\"s\":-5}', '{\"q\":4,\"r\":8,\"s\":-12}', '{\"q\":5,\"r\":6,\"s\":-11}', '{\"q\":4,\"r\":7,\"s\":-11}', '{\"q\":7,\"r\":4,\"s\":-11}', '{\"q\":6,\"r\":5,\"s\":-11}', '{\"q\":13,\"r\":-8,\"s\":-5}', '{\"q\":12,\"r\":-7,\"s\":-5}', '{\"q\":11,\"r\":-6,\"s\":-5}', '{\"q\":10,\"r\":-6,\"s\":-4}', '{\"q\":2,\"r\":1,\"s\":-3}', '{\"q\":1,\"r\":2,\"s\":-3}', '{\"q\":0,\"r\":3,\"s\":-3}', '{\"q\":-1,\"r\":4,\"s\":-3}', '{\"q\":-3,\"r\":6,\"s\":-3}', '{\"q\":-4,\"r\":7,\"s\":-3}', '{\"q\":-2,\"r\":5,\"s\":-3}', '{\"q\":3,\"r\":1,\"s\":-4}', '{\"q\":-8,\"r\":1,\"s\":7}', '{\"q\":-8,\"r\":2,\"s\":6}', '{\"q\":-8,\"r\":3,\"s\":5}', '{\"q\":-8,\"r\":4,\"s\":4}', '{\"q\":-8,\"r\":5,\"s\":3}', '{\"q\":-8,\"r\":7,\"s\":1}', '{\"q\":-8,\"r\":6,\"s\":2}', '{\"q\":-8,\"r\":8,\"s\":0}', '{\"q\":-9,\"r\":6,\"s\":3}', '{\"q\":-10,\"r\":7,\"s\":3}', '{\"q\":-5,\"r\":-1,\"s\":6}', '{\"q\":-5,\"r\":-2,\"s\":7}', '{\"q\":-5,\"r\":-3,\"s\":8}', '{\"q\":-5,\"r\":-4,\"s\":9}', '{\"q\":-5,\"r\":-5,\"s\":10}', '{\"q\":-5,\"r\":-6,\"s\":11}', '{\"q\":-2,\"r\":-4,\"s\":6}', '{\"q\":-1,\"r\":-4,\"s\":5}', '{\"q\":0,\"r\":-4,\"s\":4}', '{\"q\":-3,\"r\":-4,\"s\":7}', '{\"q\":2,\"r\":-5,\"s\":3}', '{\"q\":3,\"r\":-5,\"s\":2}', '{\"q\":0,\"r\":-2,\"s\":2}', '{\"q\":1,\"r\":-2,\"s\":1}', '{\"q\":2,\"r\":-3,\"s\":1}', '{\"q\":3,\"r\":-4,\"s\":1}', '{\"q\":0,\"r\":-3,\"s\":3}'];\nexport default class BFS extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      hexSize: 20,\n      hexOrigin: {\n        x: 400,\n        y: 300\n      },\n      currentHex: {\n        q: 0,\n        r: 0,\n        s: 0,\n        x: 0,\n        y: 0\n      },\n      obstacles: DUMMY_OBSTACLES,\n      playerPosition: {\n        q: 0,\n        r: 0,\n        s: 0\n      },\n      cameFrom: {},\n      hexPath: [],\n      path: []\n    };\n  }\n\n  componentWillMount() {\n    let hexParametres = this.getHexParametres();\n    this.setState({\n      canvasSize: {\n        canvasWidth: 800,\n        canvasHeight: 600\n      },\n      hexParametres: hexParametres\n    });\n    console.log(\"componentWillM working\");\n  }\n\n  componentDidMount() {\n    console.log(\"DidMountWorking-ShivamSolanki\");\n    const {\n      canvasWidth,\n      canvasHeight\n    } = this.state.canvasSize;\n    this.canvasHex.width = canvasWidth;\n    this.canvasHex.height = canvasHeight;\n    this.canvasInteraction.width = canvasWidth;\n    this.canvasInteraction.height = canvasHeight;\n    this.canvasView.width = canvasWidth;\n    this.canvasView.height = canvasHeight;\n    this.getCanvasPosition(this.canvasInteraction);\n    this.drawHex(this.canvasInteraction, this.Point(this.state.playerPosition.x, this.state.playerPosition.y), 1, \"black\", \"grey\", 0.2);\n    this.drawHexes();\n    this.drawObstacles();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.currentHex !== this.state.currentHex) {\n      const {\n        q,\n        r,\n        s,\n        x,\n        y\n      } = nextState.currentHex;\n      const {\n        canvasWidth,\n        canvasHeight\n      } = this.state.canvasSize;\n      const ctx = this.canvasInteraction.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n      this.drawPath();\n      return true;\n    }\n\n    if (nextState.cameFrom !== this.state.cameFrom) {\n      const {\n        canvasWidth,\n        canvasHeight\n      } = this.state.canvasSize;\n      const ctx = this.canvasView.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n      for (let l in nextState.cameFrom) {\n        const {\n          q,\n          r,\n          s\n        } = JSON.parse(l);\n        const {\n          x,\n          y\n        } = this.hexToPixel(this.Hex(q, r));\n        this.drawHex(this.canvasView, this.Point(x, y), 1, \"black\", \"grey\", 0.1);\n        var from = JSON.parse(nextState.cameFrom[l]);\n        var fromCoord = this.hexToPixel(this.Hex(from.q, from.r));\n        this.drawArrow(fromCoord.x, fromCoord.y, x, y);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  getHexCornerCoord(center, i) {\n    let angle_deg = 60 * i + 30;\n    let angle_rad = Math.PI / 180 * angle_deg;\n    let x = center.x + this.state.hexSize * Math.cos(angle_rad);\n    let y = center.y + this.state.hexSize * Math.sin(angle_rad);\n    return this.Point(x, y);\n  }\n\n  Point(x, y) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  drawHex(canvasID, center, lineWidth, lineColor, fillColor) {\n    for (let i = 0; i <= 5; i++) {\n      let start = this.getHexCornerCoord(center, i);\n      let end = this.getHexCornerCoord(center, i + 1);\n      this.fillHex(canvasID, center, fillColor);\n      this.drawLine(canvasID, start, end, lineWidth, lineColor);\n    }\n  }\n\n  drawLine(canvasID, start, end, lineWidth, lineColor) {\n    const ctx = canvasID.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.moveTo(start.x, start.y);\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  drawHexes() {\n    const {\n      canvasWidth,\n      canvasHeight\n    } = this.state.canvasSize;\n    const {\n      hexWidth,\n      hexHeight,\n      verDist,\n      horizDist\n    } = this.state.hexParametres;\n    const hexOrigin = this.state.hexOrigin;\n    let qLeftSide = Math.round(hexOrigin.x / hexWidth) * 4;\n    let qRightSide = Math.round(canvasWidth - hexOrigin.x) / hexWidth * 2;\n    let rTopSide = Math.round(hexOrigin.y / (hexHeight / 2));\n    let rBottomSide = Math.round((canvasHeight - hexOrigin.y) / (hexHeight / 2));\n    var hexPathMap = [];\n    var p = 0;\n\n    for (let r = 0; r <= rBottomSide; r++) {\n      if (r % 2 === 0 && r !== 0) {\n        p++;\n      }\n\n      for (let q = -qLeftSide; q <= qRightSide; q++) {\n        const {\n          x,\n          y\n        } = this.hexToPixel(this.Hex(q - p, r));\n\n        if (x > hexWidth / 2 && x < canvasWidth - hexWidth / 2 && y > hexHeight / 2 && y < canvasHeight - hexHeight / 2) {\n          this.drawHex(this.canvasHex, this.Point(x, y), \"black\", 1, \"grey\"); // this.drawHexCoordinates(this.canvasHex,this.Point(x,y),this.Hex(q-p,r,-(q-p)-r));\n\n          var bottomH = JSON.stringify(this.Hex(q - p, r, -(q - p) - r));\n\n          if (!this.state.obstacles.includes(bottomH)) {\n            hexPathMap.push(bottomH);\n          }\n        }\n      }\n    }\n\n    var n = 0;\n\n    for (let r = -1; r >= -rTopSide; r--) {\n      if (r % 2 !== 0) {\n        n++;\n      }\n\n      for (let q = -qLeftSide; q <= qRightSide; q++) {\n        const {\n          x,\n          y\n        } = this.hexToPixel(this.Hex(q + n, r));\n\n        if (x > hexWidth / 2 && x < canvasWidth - hexWidth / 2 && y > hexHeight / 2 && y < canvasHeight - hexHeight / 2) {\n          this.drawHex(this.canvasHex, this.Point(x, y), \"black\", 1, \"grey\"); // this.drawHexCoordinates(this.canvasHex,this.Point(x,y),this.Hex(q+n,r,-(q+n)-r));\n\n          var topH = JSON.stringify(this.Hex(q + n, r, -(q + n) - r));\n\n          if (!this.state.obstacles.includes(topH)) {\n            hexPathMap.push(topH);\n          }\n        }\n      }\n\n      hexPathMap = [].concat(hexPathMap);\n      this.setState({\n        hexPathMap: hexPathMap\n      }, this.breadthFirstSearchCallback = () => this.breadthFirstSearch(this.state.playerPosition));\n    }\n  }\n\n  hexToPixel(h) {\n    let hexOrigin = this.state.hexOrigin;\n    let x = this.state.hexSize * Math.sqrt(3) * (h.q + h.r / 2) + hexOrigin.x;\n    ;\n    let y = this.state.hexSize * (3 / 2 * h.r) + hexOrigin.y;\n    return this.Point(x, y);\n  }\n\n  drawHexCoordinates(canvasID, center, h) {\n    const ctx = canvasID.getContext(\"2d\");\n    ctx.fillText(h.q, center.x + 6, center.y);\n    ctx.fillText(h.r, center.x - 3, center.y + 15);\n    ctx.fillText(h.s, center.x - 12, center.y);\n  }\n\n  Hex(q, r, s) {\n    return {\n      q: q,\n      r: r,\n      s: s\n    };\n  }\n\n  getHexParametres() {\n    let hexHeight = this.state.hexSize * 2;\n    let hexWidth = Math.sqrt(3) / 2 * hexHeight;\n    let verDist = hexHeight * 3 / 4;\n    let horizDist = hexWidth;\n    return {\n      hexWidth,\n      hexHeight,\n      verDist,\n      horizDist\n    };\n  }\n\n  handleMouseMove(e) {\n    const {\n      left,\n      right,\n      top,\n      bottom\n    } = this.state.canvasPosition;\n    const {\n      canvasWidth,\n      canvasHeight\n    } = this.state.canvasSize;\n    const {\n      hexWidth,\n      hexHeight,\n      verDist,\n      horizDist\n    } = this.state.hexParametres;\n    let offsetX = e.pageX - left;\n    let offsetY = e.pageY - top;\n    let playerPosition = this.state.playerPosition;\n    const {\n      q,\n      r,\n      s\n    } = this.cubeRound(this.pixelToHex(this.Point(offsetX, offsetY)));\n    const {\n      x,\n      y\n    } = this.hexToPixel(this.Hex(q, r, s));\n    this.getDistanceLine(this.Hex(0, 0, 0), this.Hex(q, r, s));\n    this.getPath(this.Hex(playerPosition.q, playerPosition.r, playerPosition.s), this.Hex(q, r, s));\n\n    if (x > hexWidth / 2 && x < canvasWidth - hexWidth / 2 && y > hexHeight / 2 && y < canvasHeight - hexHeight / 2) {\n      this.setState({\n        currentHex: {\n          q,\n          r,\n          s,\n          x,\n          y\n        }\n      });\n    }\n  }\n\n  getCanvasPosition(canvasID) {\n    let rect = canvasID.getBoundingClientRect();\n    this.setState({\n      canvasPosition: {\n        left: rect.left,\n        right: rect.right,\n        top: rect.top,\n        bottom: rect.bottom\n      }\n    });\n  }\n\n  pixelToHex(p) {\n    let size = this.state.hexSize;\n    let origin = this.state.hexOrigin;\n    var q = ((p.x - origin.x) * Math.sqrt(3) / 3 - (p.y - origin.y) / 3) / size;\n    var r = (p.y - origin.y) * 2 / 3 / size;\n    return this.Hex(q, r, -q - r);\n  }\n\n  cubeRound(cube) {\n    var rx = Math.round(cube.q);\n    var ry = Math.round(cube.r);\n    var rz = Math.round(cube.s);\n    var x_diff = Math.abs(rx - cube.q);\n    var y_diff = Math.abs(ry - cube.r);\n    var z_diff = Math.abs(rz - cube.s);\n\n    if (x_diff > y_diff && x_diff > z_diff) {\n      rx = -ry - rz;\n    } else if (y_diff > z_diff) {\n      ry = -rx - rz;\n    } else {\n      rz = -rx - ry;\n    }\n\n    return this.Hex(rx, ry, rz);\n  }\n\n  cubeDirections(direction) {\n    const cubeDirections = [this.Hex(1, 0, -1), this.Hex(1, -1, 0), this.Hex(0, -1, 1), this.Hex(-1, 0, 1), this.Hex(-1, 1, 0), this.Hex(0, 1, -1)];\n    return cubeDirections[direction];\n  }\n\n  cubeAdd(a, b) {\n    return this.Hex(a.q + b.q, a.r + b.r, a.s + b.s);\n  }\n\n  cubeSubstract(hexA, hexB) {\n    return this.Hex(hexA.q - hexB.q, hexA.r - hexB.r, hexA.s - hexB.s);\n  }\n\n  getCubeNeighbor(h, direction) {\n    return this.cubeAdd(h, this.cubeDirections(direction));\n  }\n\n  drawNeighbors(h) {\n    for (let i = 0; i <= 5; i++) {\n      const {\n        q,\n        r,\n        s\n      } = this.getCubeNeighbor(this.Hex(h.q, h.r, h.s), i);\n      const {\n        x,\n        y\n      } = this.hexToPixel(this.Hex(q, r, s));\n      this.drawHex(this.canvasInteraction, this.Point(x, y), \"red\", 2);\n    }\n  }\n\n  cubeDistance(hexA, hexB) {\n    const {\n      q,\n      r,\n      s\n    } = this.cubeSubstract(hexA, hexB);\n    return (Math.abs(q) + Math.abs(r) + Math.abs(s)) / 2;\n  }\n\n  linearInt(a, b, t) {\n    return a + (b - a) * t;\n  }\n\n  cubeLinearInt(hexA, hexB, t) {\n    return this.Hex(this.linearInt(hexA.q, hexB.q, t), this.linearInt(hexA.r, hexB.r, t), this.linearInt(hexA.s, hexB.s, t));\n  }\n\n  getDistanceLine(hexA, hexB) {\n    let dist = this.cubeDistance(hexA, hexB);\n    var arr = [];\n\n    for (let i = 0; i <= dist; i++) {\n      let center = this.hexToPixel(this.cubeRound(this.cubeLinearInt(hexA, hexB, 1.0 / dist * i)));\n      arr = [].concat(arr, center);\n    }\n\n    this.setState({\n      currentDistanceLine: arr\n    });\n  }\n\n  fillHex(canvasID, center, fillColor) {\n    let c0 = this.getHexCornerCoord(center, 0);\n    let c1 = this.getHexCornerCoord(center, 1);\n    let c2 = this.getHexCornerCoord(center, 2);\n    let c3 = this.getHexCornerCoord(center, 3);\n    let c4 = this.getHexCornerCoord(center, 4);\n    let c5 = this.getHexCornerCoord(center, 5);\n    const ctx = canvasID.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.fillStyle = fillColor;\n    ctx.globalAlpha = 0.1;\n    ctx.moveTo(c0.x, c0.y);\n    ctx.lineTo(c1.x, c1.y);\n    ctx.lineTo(c2.x, c2.y);\n    ctx.lineTo(c3.x, c3.y);\n    ctx.lineTo(c4.x, c4.y);\n    ctx.lineTo(c5.x, c5.y);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  handleClick() {\n    const {\n      currentHex,\n      cameFrom\n    } = this.state;\n    const {\n      q,\n      r,\n      s\n    } = currentHex;\n\n    if (cameFrom[JSON.stringify(this.Hex(q, r, s))]) {\n      this.setState({\n        playerPosition: this.Hex(q, r, s)\n      }, this.breadthFirstSearchCallback = () => this.breadthFirstSearch(this.state.playerPosition));\n    }\n  }\n\n  drawObstacles() {\n    this.state.obstacles.map(l => {\n      const {\n        q,\n        r,\n        s\n      } = JSON.parse(l);\n      const {\n        x,\n        y\n      } = this.hexToPixel(this.Hex(q, r, s));\n      this.drawHex(this.canvasHex, this.Point(x, y), 1, \"black\", \"black\");\n    });\n  }\n\n  getCubeNeighbors(h) {\n    var arr = [];\n\n    for (let i = 0; i <= 5; i++) {\n      const {\n        q,\n        r,\n        s\n      } = this.getCubeNeighbor(this.Hex(h.q, h.r, h.s), i);\n      arr.push(this.Hex(q, r, s));\n    }\n\n    return arr;\n  }\n\n  breadthFirstSearch(playerPosition) {\n    var frontier = [playerPosition];\n    var cameFrom = {};\n    cameFrom[JSON.stringify(playerPosition)] = JSON.stringify(playerPosition);\n\n    while (frontier.length != 0) {\n      var current = frontier.shift();\n      let arr = this.getCubeNeighbors(current);\n      arr.map(l => {\n        if (!cameFrom.hasOwnProperty(JSON.stringify(l)) && this.state.hexPathMap.includes(JSON.stringify(l))) {\n          frontier.push(l);\n          cameFrom[JSON.stringify(l)] = JSON.stringify(current);\n        }\n      });\n    }\n\n    cameFrom = Object.assign({}, cameFrom);\n    this.setState({\n      cameFrom: cameFrom\n    });\n  }\n\n  getPath(start, current) {\n    const {\n      cameFrom\n    } = this.state;\n    start = JSON.stringify(start);\n    current = JSON.stringify(current);\n\n    if (cameFrom[current] != undefined) {\n      var path = [current];\n\n      while (current != start) {\n        current = cameFrom[current];\n        path.push(current);\n      }\n\n      path = [].concat(path);\n      this.setState({\n        path: path\n      });\n    }\n  }\n\n  drawPath() {\n    let path = this.state.path;\n\n    for (let i = 0; i <= path.length - 1; i++) {\n      const {\n        q,\n        r\n      } = JSON.parse(path[i]);\n      const {\n        x,\n        y\n      } = this.hexToPixel(this.Hex(q, r));\n      this.drawHex(this.canvasInteraction, this.Point(x, y), 1, \"black\", \"#05b9f5\");\n    }\n  }\n\n  drawArrow(fromx, fromy, tox, toy) {\n    var ctx = this.canvasView.getContext(\"2d\");\n    var headlen = 5;\n    var angle = Math.atan2(toy - fromy, tox - fromx);\n    ctx.beginPath();\n    ctx.moveTo(fromx, fromy);\n    ctx.lineTo(tox, toy);\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(tox, toy);\n    ctx.globalAlpha = 0.3;\n    ctx.lineTo(tox - headlen * Math.cos(angle - Math.PI / 7), toy - headlen * Math.sin(angle - Math.PI / 7));\n    ctx.lineTo(tox - headlen * Math.cos(angle + Math.PI / 7), toy - headlen * Math.sin(angle + Math.PI / 7));\n    ctx.lineTo(tox, toy);\n    ctx.lineTo(tox - headlen * Math.cos(angle - Math.PI / 7), toy - headlen * Math.sin(angle - Math.PI / 7));\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 5;\n    ctx.stroke();\n    ctx.fillStyle = \"red\";\n    ctx.fill();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BFS\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasHex => this.canvasHex = canvasHex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasCoordinates => this.canvasCoordinates = canvasCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasView => this.canvasView = canvasView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasInteraction => this.canvasInteraction = canvasInteraction,\n        onMouseMove: this.handleMouseMove,\n        onClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ASUS/bfs-visualization/src/BFS/BFS.jsx"],"names":["React","Component","ReactDOM","DUMMY_OBSTACLES","BFS","constructor","props","handleMouseMove","bind","handleClick","state","hexSize","hexOrigin","x","y","currentHex","q","r","s","obstacles","playerPosition","cameFrom","hexPath","path","componentWillMount","hexParametres","getHexParametres","setState","canvasSize","canvasWidth","canvasHeight","console","log","componentDidMount","canvasHex","width","height","canvasInteraction","canvasView","getCanvasPosition","drawHex","Point","drawHexes","drawObstacles","shouldComponentUpdate","nextProps","nextState","ctx","getContext","clearRect","drawPath","l","JSON","parse","hexToPixel","Hex","from","fromCoord","drawArrow","getHexCornerCoord","center","i","angle_deg","angle_rad","Math","PI","cos","sin","canvasID","lineWidth","lineColor","fillColor","start","end","fillHex","drawLine","beginPath","moveTo","strokeStyle","lineTo","stroke","closePath","hexWidth","hexHeight","verDist","horizDist","qLeftSide","round","qRightSide","rTopSide","rBottomSide","hexPathMap","p","bottomH","stringify","includes","push","n","topH","concat","breadthFirstSearchCallback","breadthFirstSearch","h","sqrt","drawHexCoordinates","fillText","e","left","right","top","bottom","canvasPosition","offsetX","pageX","offsetY","pageY","cubeRound","pixelToHex","getDistanceLine","getPath","rect","getBoundingClientRect","size","origin","cube","rx","ry","rz","x_diff","abs","y_diff","z_diff","cubeDirections","direction","cubeAdd","a","b","cubeSubstract","hexA","hexB","getCubeNeighbor","drawNeighbors","cubeDistance","linearInt","t","cubeLinearInt","dist","arr","currentDistanceLine","c0","c1","c2","c3","c4","c5","fillStyle","globalAlpha","fill","map","getCubeNeighbors","frontier","length","current","shift","hasOwnProperty","Object","assign","undefined","fromx","fromy","tox","toy","headlen","angle","atan2","render","canvasCoordinates"],"mappings":"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","sourcesContent":["import  React,{Component} from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport'./BFS.css';\r\nvar DUMMY_OBSTACLES=['{\"q\":-15,\"r\":9,\"s\":6}',\r\n'{\"q\":-14,\"r\":9,\"s\":5}',\r\n '{\"q\":-13,\"r\":9,\"s\":4}',\r\n '{\"q\":-12,\"r\":9,\"s\":3}',\r\n '{\"q\":-11,\"r\":9,\"s\":2}',\r\n '{\"q\":-10,\"r\":9,\"s\":1}',\r\n '{\"q\":-9,\"r\":9,\"s\":0}',\r\n '{\"q\":-8,\"r\":9,\"s\":-1}',\r\n '{\"q\":-7,\"r\":9,\"s\":-2}',\r\n '{\"q\":-6,\"r\":9,\"s\":-3}',\r\n '{\"q\":-5,\"r\":9,\"s\":-4}',\r\n '{\"q\":-4,\"r\":9,\"s\":-5}',\r\n '{\"q\":-3,\"r\":9,\"s\":-6}',\r\n '{\"q\":-2,\"r\":9,\"s\":-7}',\r\n '{\"q\":-1,\"r\":9,\"s\":-8}',\r\n '{\"q\":0,\"r\":9,\"s\":-9}',\r\n '{\"q\":1,\"r\":9,\"s\":-10}',\r\n '{\"q\":2,\"r\":9,\"s\":-11}',\r\n '{\"q\":3,\"r\":9,\"s\":-12}',\r\n '{\"q\":4,\"r\":9,\"s\":-13}',\r\n '{\"q\":5,\"r\":9,\"s\":-14}',\r\n '{\"q\":6,\"r\":9,\"s\":-15}',\r\n '{\"q\":7,\"r\":8,\"s\":-15}',\r\n '{\"q\":7,\"r\":7,\"s\":-14}',\r\n '{\"q\":8,\"r\":6,\"s\":-14}',\r\n '{\"q\":8,\"r\":5,\"s\":-13}',\r\n '{\"q\":9,\"r\":4,\"s\":-13}',\r\n '{\"q\":9,\"r\":3,\"s\":-12}',\r\n '{\"q\":10,\"r\":2,\"s\":-12}',\r\n '{\"q\":11,\"r\":0,\"s\":-11}',\r\n '{\"q\":10,\"r\":1,\"s\":-11}',\r\n '{\"q\":11,\"r\":-1,\"s\":-10}',\r\n'{\"q\":12,\"r\":-2,\"s\":-10}',\r\n '{\"q\":12,\"r\":-3,\"s\":-9}',\r\n '{\"q\":13,\"r\":-4,\"s\":-9}',\r\n '{\"q\":13,\"r\":-5,\"s\":-8}',\r\n '{\"q\":14,\"r\":-6,\"s\":-8}',\r\n '{\"q\":14,\"r\":-7,\"s\":-7}',\r\n '{\"q\":15,\"r\":-8,\"s\":-7}',\r\n '{\"q\":15,\"r\":-9,\"s\":-6}',\r\n '{\"q\":14,\"r\":-9,\"s\":-5}',\r\n '{\"q\":13,\"r\":-9,\"s\":-4}',\r\n '{\"q\":12,\"r\":-9,\"s\":-3}',\r\n '{\"q\":11,\"r\":-9,\"s\":-2}',\r\n '{\"q\":9,\"r\":-9,\"s\":0}',\r\n '{\"q\":10,\"r\":-9,\"s\":-1}',\r\n '{\"q\":8,\"r\":-9,\"s\":1}',\r\n '{\"q\":7,\"r\":-9,\"s\":2}',\r\n '{\"q\":6,\"r\":-9,\"s\":3}',\r\n '{\"q\":5,\"r\":-9,\"s\":4}',\r\n '{\"q\":4,\"r\":-9,\"s\":5}',\r\n '{\"q\":2,\"r\":-9,\"s\":7}',\r\n '{\"q\":3,\"r\":-9,\"s\":6}',\r\n '{\"q\":1,\"r\":-9,\"s\":8}',\r\n '{\"q\":0,\"r\":-9,\"s\":9}',\r\n '{\"q\":-1,\"r\":-9,\"s\":10}',\r\n '{\"q\":-2,\"r\":-9,\"s\":11}',\r\n '{\"q\":-3,\"r\":-9,\"s\":12}',\r\n '{\"q\":-4,\"r\":-9,\"s\":13}',\r\n '{\"q\":-5,\"r\":-9,\"s\":14}',\r\n '{\"q\":-6,\"r\":-9,\"s\":15}',\r\n '{\"q\":-7,\"r\":-8,\"s\":15}',\r\n '{\"q\":-8,\"r\":-6,\"s\":14}',\r\n '{\"q\":-8,\"r\":-5,\"s\":13}',\r\n '{\"q\":-9,\"r\":-4,\"s\":13}',\r\n '{\"q\":-9,\"r\":-3,\"s\":12}',\r\n '{\"q\":-10,\"r\":-2,\"s\":12}',\r\n '{\"q\":-10,\"r\":-1,\"s\":11}',\r\n '{\"q\":-11,\"r\":0,\"s\":11}',\r\n '{\"q\":-11,\"r\":1,\"s\":10}',\r\n '{\"q\":-12,\"r\":2,\"s\":10}',\r\n '{\"q\":-12,\"r\":3,\"s\":9}',\r\n '{\"q\":-13,\"r\":4,\"s\":9}',\r\n '{\"q\":-13,\"r\":5,\"s\":8}',\r\n '{\"q\":-14,\"r\":6,\"s\":8}',\r\n '{\"q\":-14,\"r\":7,\"s\":7}',\r\n '{\"q\":-15,\"r\":8,\"s\":7}',\r\n '{\"q\":-7,\"r\":-7,\"s\":14}',\r\n '{\"q\":-6,\"r\":-7,\"s\":13}',\r\n '{\"q\":-6,\"r\":-6,\"s\":12}',\r\n '{\"q\":10,\"r\":-8,\"s\":-2}',\r\n '{\"q\":8,\"r\":-6,\"s\":-2}',\r\n '{\"q\":9,\"r\":-7,\"s\":-2}',\r\n '{\"q\":7,\"r\":-5,\"s\":-2}',\r\n '{\"q\":5,\"r\":-3,\"s\":-2}',\r\n '{\"q\":6,\"r\":-4,\"s\":-2}',\r\n '{\"q\":4,\"r\":-2,\"s\":-2}',\r\n'{\"q\":4,\"r\":1,\"s\":-5}',\r\n '{\"q\":5,\"r\":0,\"s\":-5}',\r\n'{\"q\":6,\"r\":-1,\"s\":-5}',\r\n '{\"q\":4,\"r\":8,\"s\":-12}',\r\n '{\"q\":5,\"r\":6,\"s\":-11}',\r\n '{\"q\":4,\"r\":7,\"s\":-11}',\r\n '{\"q\":7,\"r\":4,\"s\":-11}',\r\n '{\"q\":6,\"r\":5,\"s\":-11}',\r\n'{\"q\":13,\"r\":-8,\"s\":-5}',\r\n '{\"q\":12,\"r\":-7,\"s\":-5}',\r\n '{\"q\":11,\"r\":-6,\"s\":-5}',\r\n '{\"q\":10,\"r\":-6,\"s\":-4}',\r\n '{\"q\":2,\"r\":1,\"s\":-3}',\r\n '{\"q\":1,\"r\":2,\"s\":-3}',\r\n '{\"q\":0,\"r\":3,\"s\":-3}',\r\n '{\"q\":-1,\"r\":4,\"s\":-3}',\r\n '{\"q\":-3,\"r\":6,\"s\":-3}',\r\n '{\"q\":-4,\"r\":7,\"s\":-3}',\r\n '{\"q\":-2,\"r\":5,\"s\":-3}',\r\n '{\"q\":3,\"r\":1,\"s\":-4}',\r\n '{\"q\":-8,\"r\":1,\"s\":7}',\r\n '{\"q\":-8,\"r\":2,\"s\":6}',\r\n '{\"q\":-8,\"r\":3,\"s\":5}',\r\n '{\"q\":-8,\"r\":4,\"s\":4}',\r\n '{\"q\":-8,\"r\":5,\"s\":3}',\r\n '{\"q\":-8,\"r\":7,\"s\":1}',\r\n '{\"q\":-8,\"r\":6,\"s\":2}',\r\n '{\"q\":-8,\"r\":8,\"s\":0}',\r\n '{\"q\":-9,\"r\":6,\"s\":3}',\r\n '{\"q\":-10,\"r\":7,\"s\":3}',\r\n '{\"q\":-5,\"r\":-1,\"s\":6}',\r\n '{\"q\":-5,\"r\":-2,\"s\":7}',\r\n '{\"q\":-5,\"r\":-3,\"s\":8}',\r\n '{\"q\":-5,\"r\":-4,\"s\":9}',\r\n '{\"q\":-5,\"r\":-5,\"s\":10}',\r\n '{\"q\":-5,\"r\":-6,\"s\":11}',\r\n '{\"q\":-2,\"r\":-4,\"s\":6}',\r\n '{\"q\":-1,\"r\":-4,\"s\":5}',\r\n '{\"q\":0,\"r\":-4,\"s\":4}',\r\n '{\"q\":-3,\"r\":-4,\"s\":7}',\r\n '{\"q\":2,\"r\":-5,\"s\":3}',\r\n '{\"q\":3,\"r\":-5,\"s\":2}',\r\n '{\"q\":0,\"r\":-2,\"s\":2}',\r\n '{\"q\":1,\"r\":-2,\"s\":1}',\r\n '{\"q\":2,\"r\":-3,\"s\":1}',\r\n'{\"q\":3,\"r\":-4,\"s\":1}',\r\n '{\"q\":0,\"r\":-3,\"s\":3}',\r\n \r\n]\r\nexport default class BFS extends  React.Component{\r\n\r\n    constructor(props)\r\n    { \r\n        super(props);\r\n        this.handleMouseMove=this.handleMouseMove.bind(this);\r\n      this.handleClick=this.handleClick.bind(this);\r\n        this.state={\r\n            hexSize:20,\r\n            hexOrigin: {x:400,y:300},\r\n            currentHex:{q:0,r:0,s:0,x:0,y:0},\r\n           obstacles: DUMMY_OBSTACLES,\r\n          playerPosition: {q:0,r:0,s:0},\r\n          cameFrom:{},\r\n          hexPath:[],\r\n          path:[]\r\n        }\r\n\r\n    } \r\n  \r\n    componentWillMount(){\r\n        let hexParametres=this.getHexParametres();\r\n        this.setState({\r\n            canvasSize:{canvasWidth:800,canvasHeight:600},\r\n             hexParametres: hexParametres\r\n        })\r\n\r\n        console.log(\"componentWillM working\");\r\n   \r\n    }\r\ncomponentDidMount(){\r\nconsole.log(\"DidMountWorking-ShivamSolanki\");\r\n\r\n    const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n    this.canvasHex.width=canvasWidth;\r\n    this.canvasHex.height=canvasHeight;\r\n    this.canvasInteraction.width=canvasWidth;\r\n    this.canvasInteraction.height=canvasHeight;\r\n   this.canvasView.width=canvasWidth;\r\n   this.canvasView.height=canvasHeight;\r\n    this.getCanvasPosition(this.canvasInteraction);\r\n   this.drawHex(this.canvasInteraction,this.Point(this.state.playerPosition.x,this.state.playerPosition.y),1,\"black\",\"grey\",0.2);\r\n    this.drawHexes();\r\n    this.drawObstacles();\r\n}\r\nshouldComponentUpdate(nextProps,nextState){\r\n    if(nextState.currentHex!==this.state.currentHex){\r\n        const{q,r,s,x,y}=nextState.currentHex;\r\n        const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n       const ctx=this.canvasInteraction.getContext(\"2d\");\r\n       ctx.clearRect(0,0,canvasWidth,canvasHeight);\r\n    this.drawPath();\r\n    \r\n    return true;\r\n    }\r\n    if(nextState.cameFrom!==this.state.cameFrom){\r\n        const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n        const ctx=this.canvasView.getContext(\"2d\");\r\n        ctx.clearRect(0,0,canvasWidth,canvasHeight);\r\n        for(let  l in nextState.cameFrom){\r\n            const{q,r,s}=JSON.parse(l);\r\n            const{x,y}=this.hexToPixel(this.Hex(q,r));\r\n            this.drawHex(this.canvasView,this.Point(x,y),1,\"black\",\"grey\",0.1);\r\n            var from= JSON.parse(nextState.cameFrom[l]);\r\n            var fromCoord=this.hexToPixel(this.Hex(from.q,from.r));\r\n            this.drawArrow(fromCoord.x,fromCoord.y,x,y);\r\n        }\r\n        return true;\r\n    }\r\nreturn false;\r\n    \r\n}\r\n getHexCornerCoord(center, i){\r\n    let angle_deg = 60 * i +30;\r\n    let angle_rad = Math.PI / 180 * angle_deg;\r\n    let x=center.x +this.state.hexSize * Math.cos(angle_rad);\r\n\r\n    let y=center.y + this.state.hexSize * Math.sin(angle_rad);\r\n    return this.Point(x,y);\r\n}\r\nPoint(x,y){\r\n    return {x: x,y: y}\r\n}\r\ndrawHex(canvasID,center,lineWidth,lineColor,fillColor){\r\n    for(let i=0;i<=5;i++)\r\n    {\r\n        let start=this.getHexCornerCoord(center,i);\r\n        let end=this.getHexCornerCoord(center,i+1);\r\n        this.fillHex(canvasID,center,fillColor);\r\n        this.drawLine(canvasID,start,end,lineWidth,lineColor);\r\n    }\r\n}\r\n\r\ndrawLine(canvasID,start,end,lineWidth,lineColor)\r\n{\r\n    const ctx=canvasID.getContext(\"2d\");\r\n      ctx.beginPath();\r\n    ctx.moveTo(start.x,start.y);\r\n    ctx.strokeStyle=lineColor;\r\n    ctx.lineWidth=lineWidth;\r\n\r\n    ctx.lineTo(end.x,end.y);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n}\r\ndrawHexes(){\r\n    const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n    const{hexWidth,hexHeight,verDist,horizDist}=this.state.hexParametres;\r\n    const hexOrigin=this.state.hexOrigin;\r\n    let qLeftSide=Math.round(hexOrigin.x/hexWidth)*4;\r\n    let qRightSide=Math.round(canvasWidth-hexOrigin.x)/hexWidth*2;\r\n      let rTopSide=Math.round(hexOrigin.y/(hexHeight/2));\r\n      let rBottomSide=Math.round((canvasHeight-hexOrigin.y)/(hexHeight/2));\r\n    var hexPathMap=[];\r\n      var p=0;\r\n      for(let r=0;r<=rBottomSide;r++){\r\n          if(r%2===0&&r!==0)\r\n          {\r\n              p++;\r\n          }\r\n          for(let q=-qLeftSide;q<=qRightSide;q++)\r\n          {\r\n              const{x,y}=this.hexToPixel(this.Hex(q-p,r))\r\n              if((x>hexWidth/2&&x<canvasWidth-hexWidth/2)&& (y>hexHeight/2&&y<canvasHeight-hexHeight/2)){\r\n                  this.drawHex(this.canvasHex,this.Point(x,y),\"black\",1,\"grey\");\r\n                 // this.drawHexCoordinates(this.canvasHex,this.Point(x,y),this.Hex(q-p,r,-(q-p)-r));\r\n              var bottomH=JSON.stringify(this.Hex(q-p,r,-(q-p)-r));\r\n              if(!this.state.obstacles.includes(bottomH))\r\n              {\r\n                  hexPathMap.push(bottomH);\r\n              }\r\n                }\r\n          }\r\n         \r\n      }\r\n      var n=0;\r\n      for(let r=-1;r>=-rTopSide;r--)\r\n      {\r\n          if(r%2!==0)\r\n          {\r\n              n++;\r\n\r\n          }\r\n          for(let q=-qLeftSide;q<=qRightSide;q++)\r\n          {\r\n              const{x,y}=this.hexToPixel(this.Hex(q+n,r));\r\n              if((x>hexWidth/2&&x<canvasWidth-hexWidth/2)&&(y>hexHeight/2&&y<canvasHeight-hexHeight/2)){\r\n                     this.drawHex(this.canvasHex,this.Point(x,y),\"black\",1,\"grey\");\r\n                    // this.drawHexCoordinates(this.canvasHex,this.Point(x,y),this.Hex(q+n,r,-(q+n)-r));\r\n             var topH=JSON.stringify(this.Hex(q+n,r,-(q+n)-r));\r\n             if(!this.state.obstacles.includes(topH)){\r\n                 hexPathMap.push(topH);\r\n             }\r\n                }\r\n          }\r\n          hexPathMap=[].concat(hexPathMap);\r\n          this.setState(\r\n              {hexPathMap: hexPathMap},\r\n              this.breadthFirstSearchCallback=()=>this.breadthFirstSearch(this.state.playerPosition)\r\n          )\r\n      }\r\n  \r\n}\r\nhexToPixel(h){let hexOrigin=this.state.hexOrigin;\r\n    let x = this.state.hexSize * Math.sqrt(3) * (h.q  +h.r/2)+hexOrigin.x;;\r\n    let y = this.state.hexSize * (                         3/2 * h.r)+hexOrigin.y;\r\n    return this.Point(x, y);\r\n} \r\n\r\ndrawHexCoordinates(canvasID,center,h)\r\n{\r\n    const ctx=canvasID.getContext(\"2d\");\r\n    ctx.fillText(h.q,center.x+6,center.y);\r\n    ctx.fillText(h.r,center.x-3,center.y+15);\r\n    ctx.fillText(h.s,center.x-12,center.y);\r\n\r\n}\r\n\r\nHex(q,r,s){\r\n    return {q: q,r: r,s: s}\r\n}\r\ngetHexParametres(){\r\n    let hexHeight=this.state.hexSize*2;\r\n    let hexWidth=Math.sqrt(3)/2*hexHeight;\r\n    let verDist=hexHeight*3/4;\r\n    let horizDist=hexWidth;\r\n    return {hexWidth,hexHeight,verDist,horizDist}\r\n}\r\nhandleMouseMove(e){\r\n    const{left,right,top,bottom}=this.state.canvasPosition;\r\nconst{canvasWidth,canvasHeight}=this.state.canvasSize;\r\nconst{hexWidth,hexHeight,verDist,horizDist}=this.state.hexParametres;\r\n    let offsetX=e.pageX-left;\r\n    let offsetY=e.pageY-top;\r\n    let playerPosition=this.state.playerPosition; \r\n    const{q,r,s}=this.cubeRound(this.pixelToHex(this.Point(offsetX,offsetY)));\r\n      const{x,y}=this.hexToPixel(this.Hex(q,r,s));\r\n      this.getDistanceLine(this.Hex(0,0,0),this.Hex(q,r,s));\r\n \r\n      this.getPath(this.Hex(playerPosition.q,playerPosition.r,playerPosition.s),this.Hex(q,r,s));\r\n    if((x>hexWidth/2&&x<canvasWidth-hexWidth/2)&&(y>hexHeight/2&&y<canvasHeight-hexHeight/2)){\r\n      this.setState({\r\n          currentHex:{q,r,s,x,y}\r\n      })}\r\n    }\r\ngetCanvasPosition(canvasID)\r\n{\r\n    let rect=canvasID.getBoundingClientRect();\r\n    this.setState({\r\n        canvasPosition: {left: rect.left,right:  rect.right,top: rect.top,bottom:  rect.bottom}\r\n    })\r\n}\r\npixelToHex(p){\r\n    let size=this.state.hexSize;\r\n    let origin=this.state.hexOrigin;\r\n    var q = ((p.x-origin.x)*Math.sqrt(3)/3-(p.y-origin.y)/3) / size\r\n    var r = (p.y-origin.y)*2/3/ size\r\n    return this.Hex(q,r,-q-r);\r\n}\r\n\r\ncubeRound(cube)\r\n {   var rx = Math.round(cube.q)\r\n    var ry =Math.round(cube.r)\r\n    var rz =Math.round(cube.s)\r\n    \r\n    var x_diff = Math.abs(rx - cube.q)\r\n    var y_diff = Math.abs(ry - cube.r)\r\n    var z_diff = Math.abs(rz - cube.s)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff){\r\n        rx = -ry-rz\r\n    }\r\n    else if( y_diff > z_diff)\r\n       { ry = -rx-rz}\r\n    else{\r\n        rz = -rx-ry\r\n    }\r\n   \r\n    return this.Hex(rx, ry, rz);\r\n}\r\n\r\ncubeDirections(direction){\r\n    const cubeDirections=[this.Hex(1,0,-1),this.Hex(1,-1,0),this.Hex(0,-1,1),this.Hex(-1,0,1),this.Hex(-1,1,0),this.Hex(0,1,-1)];\r\n    return cubeDirections[direction];\r\n}\r\ncubeAdd(a,b){\r\n    return this.Hex(a.q+b.q ,a.r+b.r ,a.s+b.s);\r\n}\r\ncubeSubstract(hexA,hexB){\r\n   \r\n    return this.Hex(hexA.q-hexB.q,hexA.r-hexB.r,hexA.s-hexB.s);\r\n}\r\ngetCubeNeighbor(h,direction){\r\n    return this.cubeAdd(h,this.cubeDirections(direction));\r\n\r\n}\r\ndrawNeighbors(h){\r\n    for(let i=0;i<=5;i++)\r\n    {\r\n        const{q,r,s}=this.getCubeNeighbor(this.Hex(h.q,h.r,h.s),i);\r\n       const{x,y}=this.hexToPixel(this.Hex(q,r,s));\r\n       this.drawHex(this.canvasInteraction,this.Point(x,y),\"red\",2);\r\n    }\r\n}\r\ncubeDistance(hexA,hexB)\r\n{\r\n    const{q,r,s}=this.cubeSubstract(hexA,hexB);\r\n    return (Math.abs(q)+Math.abs(r)+Math.abs(s))/2;\r\n}\r\n\r\n\r\nlinearInt(a,b,t)\r\n{\r\n    return (a+(b-a)*t)\r\n}\r\ncubeLinearInt(hexA,hexB,t)\r\n{\r\n    return this.Hex(this.linearInt(hexA.q,hexB.q,t),this.linearInt(hexA.r,hexB.r,t),this.linearInt(hexA.s,hexB.s,t));\r\n}\r\ngetDistanceLine(hexA,hexB)\r\n{\r\n    let dist=this.cubeDistance(hexA,hexB);\r\n    \r\n    var arr=[];\r\n    for(let i=0;i<=dist;i++)\r\n    {\r\n        let center=this.hexToPixel(this.cubeRound(this.cubeLinearInt(hexA,hexB,1.0/dist*i)));\r\n        arr=[].concat(arr,center);\r\n\r\n    }\r\n    this.setState({\r\n        currentDistanceLine:arr\r\n    })\r\n}\r\n\r\nfillHex(canvasID,center,fillColor){\r\n    let c0=this.getHexCornerCoord(center,0);\r\n    let c1=this.getHexCornerCoord(center,1);\r\n    let c2=this.getHexCornerCoord(center,2);\r\n    let c3=this.getHexCornerCoord(center,3);\r\n    let c4=this.getHexCornerCoord(center,4);\r\n    let c5=this.getHexCornerCoord(center,5);\r\n    const ctx= canvasID.getContext(\"2d\");\r\n    ctx.beginPath();\r\n    ctx.fillStyle=fillColor;\r\n    ctx.globalAlpha=0.1;\r\n    ctx.moveTo(c0.x,c0.y);\r\n    ctx.lineTo(c1.x,c1.y);\r\n    ctx.lineTo(c2.x,c2.y);\r\n    ctx.lineTo(c3.x,c3.y);\r\n    ctx.lineTo(c4.x,c4.y);\r\n     ctx.lineTo(c5.x,c5.y);\r\n     ctx.closePath();\r\n     ctx.fill();\r\n}\r\nhandleClick(){const{currentHex,cameFrom}=this.state;\r\nconst{q,r,s}=currentHex;\r\nif(cameFrom[JSON.stringify(this.Hex(q,r,s))]){\r\n    this.setState(\r\n        {playerPosition:this.Hex(q,r,s)},\r\n        this.breadthFirstSearchCallback=()=>this.breadthFirstSearch(this.state.playerPosition) \r\n    )\r\n}\r\n\r\n}\r\ndrawObstacles(){\r\n    this.state.obstacles.map((l)=>{\r\n        const{q,r,s}=JSON.parse(l);\r\n        const{x,y}=this.hexToPixel(this.Hex(q,r,s));\r\n        this.drawHex(this.canvasHex,this.Point(x,y),1,\"black\",\"black\")\r\n    })\r\n}\r\ngetCubeNeighbors(h){\r\n    var arr=[];\r\n    for(let i=0;i<=5;i++)\r\n    {\r\n        const {q,r,s}=this.getCubeNeighbor(this.Hex(h.q,h.r,h.s),i);\r\n        arr.push(this.Hex(q,r,s));\r\n    }\r\n    return arr;\r\n}\r\nbreadthFirstSearch(playerPosition){\r\n    var frontier=[playerPosition];\r\n    var cameFrom={};\r\n    cameFrom[JSON.stringify(playerPosition)]=JSON.stringify(playerPosition);\r\n    while(frontier.length!=0){\r\n        var current=frontier.shift();\r\n        let arr=this.getCubeNeighbors(current);\r\n        arr.map((l)=>{\r\n            if(!cameFrom.hasOwnProperty(JSON.stringify(l))&&this.state.hexPathMap.includes(JSON.stringify(l))){\r\n                frontier.push(l);\r\n                cameFrom[JSON.stringify(l)]=JSON.stringify(current);\r\n            }\r\n        })\r\n    }\r\n     cameFrom=Object.assign({},cameFrom);\r\n     this.setState({\r\n         cameFrom:cameFrom\r\n     })\r\n}\r\ngetPath(start,current)\r\n{\r\n    const{cameFrom}=this.state;\r\n    start=JSON.stringify(start);\r\n    current=JSON.stringify(current);\r\n    if(cameFrom[current]!=undefined){\r\n        var path=[current];\r\n        while(current!=start){\r\n            current=cameFrom[current];\r\n            path.push(current);\r\n        }\r\n    \r\n        path=[].concat(path);\r\n        this.setState({\r\n            path:path\r\n        })\r\n    }\r\n  \r\n}\r\ndrawPath(){\r\n    let path=this.state.path;\r\n    for(let i=0;i<=path.length-1;i++)\r\n    {\r\n        const{q,r}=JSON.parse(path[i]);\r\n        const{x,y}=this.hexToPixel(this.Hex(q,r));\r\n        this.drawHex(this.canvasInteraction,this.Point(x,y),1,\"black\",\"#05b9f5\");\r\n    }\r\n}\r\ndrawArrow(fromx,fromy,tox,toy)\r\n{\r\n    var ctx=this.canvasView.getContext(\"2d\");\r\n    var headlen=5;\r\n    var angle=Math.atan2(toy-fromy,tox-fromx);\r\n    ctx.beginPath();\r\n    ctx.moveTo(fromx,fromy);\r\n    ctx.lineTo(tox,toy);\r\n    ctx.strokeStyle=\"red\";\r\n    ctx.lineWidth=3;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(tox,toy);\r\n    ctx.globalAlpha=0.3;\r\n    ctx.lineTo(tox-headlen*Math.cos(angle-Math.PI/7),toy-headlen*Math.sin(angle-Math.PI/7));\r\n    ctx.lineTo(tox-headlen*Math.cos(angle+Math.PI/7),toy-headlen*Math.sin(angle+Math.PI/7));\r\n    ctx.lineTo(tox,toy);\r\n    ctx.lineTo(tox-headlen*Math.cos(angle-Math.PI/7),toy-headlen*Math.sin(angle-Math.PI/7));\r\n    ctx.strokeStyle=\"red\";\r\n    ctx.lineWidth=5;\r\n    ctx.stroke();\r\n    ctx.fillStyle=\"red\";\r\n    ctx.fill();\r\n}\r\n  render(){\r\n        return (\r\n            <div className=\"BFS\">\r\n                <canvas ref={canvasHex=>this.canvasHex = canvasHex} ></canvas>\r\n               <canvas ref={canvasCoordinates=>this.canvasCoordinates=canvasCoordinates}></canvas>\r\n               <canvas ref={canvasView=>this.canvasView=canvasView}></canvas>\r\n              <canvas ref={canvasInteraction=>this.canvasInteraction=canvasInteraction} onMouseMove={this.handleMouseMove}\r\n              onClick={this.handleClick}></canvas>\r\n            </div>\r\n        )\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}