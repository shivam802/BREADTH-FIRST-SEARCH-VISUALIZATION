{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\bfs-visualization\\\\src\\\\BFS\\\\BFS.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './BFS.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BFS extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hexSize: 52\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      canvasSize: {\n        cansvasWidth: 800,\n        canvasHeight: 600\n      }\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"hello\");\n    const {\n      canvasWidth,\n      canvasHeight\n    } = this.state.canvasSize;\n    this.canvasHex.width = canvasWidth;\n    this.canvasHex.height = canvasHeight;\n    this.drawHex(this.canvasHex, {\n      x: 50,\n      y: 50\n    });\n  }\n\n  getHexCornerCoord(center, i) {\n    let angle_deg = 60 * i + 30;\n    let angle_rad = Math.PI / 180 * angle_deg;\n    let x = center.x + this.state.hexSize * Math.cos(angle_rad);\n    let y = center.y + this.state.hexSize * Math.sin(angle_rad);\n    return this.Point(x, y);\n  }\n\n  Point(x, y) {\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  drawHex(canvasID, center) {\n    for (let i = 0; i <= 5; i++) {\n      let start = this.getHexCornerCoord(center, i);\n      let end = this.getHexCornerCoord(center, i + 1);\n      this.drawLine(canvasID, {\n        x: start.x,\n        y: start.y\n      }, {\n        x: end.x,\n        y: end.y\n      });\n    }\n  }\n\n  drawLine(canvasID, start, end) {\n    const ctx = canvasID.getContext(\"2d\");\n    ctx.beginPath();\n    ctx.moveTo(start.x, start.y);\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BFS\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasHex => this.canvasHex = canvasHex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ASUS/bfs-visualization/src/BFS/BFS.jsx"],"names":["React","Component","ReactDOM","BFS","constructor","props","state","hexSize","componentWillMount","setState","canvasSize","cansvasWidth","canvasHeight","componentDidMount","console","log","canvasWidth","canvasHex","width","height","drawHex","x","y","getHexCornerCoord","center","i","angle_deg","angle_rad","Math","PI","cos","sin","Point","canvasID","start","end","drawLine","ctx","getContext","beginPath","moveTo","lineTo","stroke","closePath","render"],"mappings":"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","sourcesContent":["import  React,{Component} from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport'./BFS.css';\r\nexport default class BFS extends  React.Component{\r\n\r\n    constructor(props)\r\n    { \r\n        super(props);\r\n       this.state={\r\n            hexSize: 52\r\n        }\r\n    } \r\n  \r\n    componentWillMount(){\r\n        this.setState({\r\n            canvasSize:{cansvasWidth:800,canvasHeight:600}\r\n        })\r\n    }\r\ncomponentDidMount(){\r\nconsole.log(\"hello\");\r\n\r\n    const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n    this.canvasHex.width=canvasWidth;\r\n    this.canvasHex.height=canvasHeight;\r\n    this.drawHex(this.canvasHex,{x:50,y:50});\r\n}\r\n getHexCornerCoord(center, i){\r\n    let angle_deg = 60 * i +30;\r\n    let angle_rad = Math.PI / 180 * angle_deg;\r\n    let x=center.x +this.state.hexSize * Math.cos(angle_rad);\r\n\r\n    let y=center.y + this.state.hexSize * Math.sin(angle_rad);\r\n    return this.Point(x,y);\r\n}\r\nPoint(x,y){\r\n    return {x: x,y: y}\r\n}\r\ndrawHex(canvasID,center){\r\n    for(let i=0;i<=5;i++)\r\n    {\r\n        let start=this.getHexCornerCoord(center,i);\r\n        let end=this.getHexCornerCoord(center,i+1);\r\n\r\n        this.drawLine(canvasID,{x:start.x,y:start.y},{x: end.x,y: end.y});\r\n    }\r\n}\r\n\r\ndrawLine(canvasID,start,end)\r\n{\r\n    const ctx=canvasID.getContext(\"2d\");\r\n      ctx.beginPath();\r\n    ctx.moveTo(start.x,start.y);\r\n    ctx.lineTo(end.x,end.y);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n}\r\n    render(){\r\n        return (\r\n            <div className=\"BFS\">\r\n                <canvas ref={canvasHex=>this.canvasHex = canvasHex}></canvas>\r\n            </div>\r\n        )\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}