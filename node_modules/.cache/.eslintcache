[{"C:\\Users\\ASUS\\bfs-visualization\\src\\index.js":"1","C:\\Users\\ASUS\\bfs-visualization\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\bfs-visualization\\src\\App.js":"3","C:\\Users\\ASUS\\bfs-visualization\\src\\BFS\\BFS.jsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":177,"mtime":1628006575951,"results":"8","hashOfConfig":"6"},{"size":17392,"mtime":1628005555351,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"4qfxov",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\Users\\ASUS\\bfs-visualization\\src\\index.js",[],["21","22"],"C:\\Users\\ASUS\\bfs-visualization\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\bfs-visualization\\src\\App.js",["23"],"import logo from './logo.svg';\nimport './App.css';\nimport BFS from './BFS/BFS';\n\nfunction App() {\n  return (\n    <div >\n     <BFS ></BFS>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\ASUS\\bfs-visualization\\src\\BFS\\BFS.jsx",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43"],"import  React,{Component} from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport'./BFS.css';\r\nvar DUMMY_OBSTACLES=['{\"q\":-15,\"r\":9,\"s\":6}',\r\n'{\"q\":-14,\"r\":9,\"s\":5}',\r\n '{\"q\":-13,\"r\":9,\"s\":4}',\r\n '{\"q\":-12,\"r\":9,\"s\":3}',\r\n '{\"q\":-11,\"r\":9,\"s\":2}',\r\n '{\"q\":-10,\"r\":9,\"s\":1}',\r\n '{\"q\":-9,\"r\":9,\"s\":0}',\r\n '{\"q\":-8,\"r\":9,\"s\":-1}',\r\n '{\"q\":-7,\"r\":9,\"s\":-2}',\r\n '{\"q\":-6,\"r\":9,\"s\":-3}',\r\n '{\"q\":-5,\"r\":9,\"s\":-4}',\r\n '{\"q\":-4,\"r\":9,\"s\":-5}',\r\n '{\"q\":-3,\"r\":9,\"s\":-6}',\r\n '{\"q\":-2,\"r\":9,\"s\":-7}',\r\n '{\"q\":-1,\"r\":9,\"s\":-8}',\r\n '{\"q\":0,\"r\":9,\"s\":-9}',\r\n '{\"q\":1,\"r\":9,\"s\":-10}',\r\n '{\"q\":2,\"r\":9,\"s\":-11}',\r\n '{\"q\":3,\"r\":9,\"s\":-12}',\r\n '{\"q\":4,\"r\":9,\"s\":-13}',\r\n '{\"q\":5,\"r\":9,\"s\":-14}',\r\n '{\"q\":6,\"r\":9,\"s\":-15}',\r\n '{\"q\":7,\"r\":8,\"s\":-15}',\r\n '{\"q\":7,\"r\":7,\"s\":-14}',\r\n '{\"q\":8,\"r\":6,\"s\":-14}',\r\n '{\"q\":8,\"r\":5,\"s\":-13}',\r\n '{\"q\":9,\"r\":4,\"s\":-13}',\r\n '{\"q\":9,\"r\":3,\"s\":-12}',\r\n '{\"q\":10,\"r\":2,\"s\":-12}',\r\n '{\"q\":11,\"r\":0,\"s\":-11}',\r\n '{\"q\":10,\"r\":1,\"s\":-11}',\r\n '{\"q\":11,\"r\":-1,\"s\":-10}',\r\n'{\"q\":12,\"r\":-2,\"s\":-10}',\r\n '{\"q\":12,\"r\":-3,\"s\":-9}',\r\n '{\"q\":13,\"r\":-4,\"s\":-9}',\r\n '{\"q\":13,\"r\":-5,\"s\":-8}',\r\n '{\"q\":14,\"r\":-6,\"s\":-8}',\r\n '{\"q\":14,\"r\":-7,\"s\":-7}',\r\n '{\"q\":15,\"r\":-8,\"s\":-7}',\r\n '{\"q\":15,\"r\":-9,\"s\":-6}',\r\n '{\"q\":14,\"r\":-9,\"s\":-5}',\r\n '{\"q\":13,\"r\":-9,\"s\":-4}',\r\n '{\"q\":12,\"r\":-9,\"s\":-3}',\r\n '{\"q\":11,\"r\":-9,\"s\":-2}',\r\n '{\"q\":9,\"r\":-9,\"s\":0}',\r\n '{\"q\":10,\"r\":-9,\"s\":-1}',\r\n '{\"q\":8,\"r\":-9,\"s\":1}',\r\n '{\"q\":7,\"r\":-9,\"s\":2}',\r\n '{\"q\":6,\"r\":-9,\"s\":3}',\r\n '{\"q\":5,\"r\":-9,\"s\":4}',\r\n '{\"q\":4,\"r\":-9,\"s\":5}',\r\n '{\"q\":2,\"r\":-9,\"s\":7}',\r\n '{\"q\":3,\"r\":-9,\"s\":6}',\r\n '{\"q\":1,\"r\":-9,\"s\":8}',\r\n '{\"q\":0,\"r\":-9,\"s\":9}',\r\n '{\"q\":-1,\"r\":-9,\"s\":10}',\r\n '{\"q\":-2,\"r\":-9,\"s\":11}',\r\n '{\"q\":-3,\"r\":-9,\"s\":12}',\r\n '{\"q\":-4,\"r\":-9,\"s\":13}',\r\n '{\"q\":-5,\"r\":-9,\"s\":14}',\r\n '{\"q\":-6,\"r\":-9,\"s\":15}',\r\n '{\"q\":-7,\"r\":-8,\"s\":15}',\r\n '{\"q\":-8,\"r\":-6,\"s\":14}',\r\n '{\"q\":-8,\"r\":-5,\"s\":13}',\r\n '{\"q\":-9,\"r\":-4,\"s\":13}',\r\n '{\"q\":-9,\"r\":-3,\"s\":12}',\r\n '{\"q\":-10,\"r\":-2,\"s\":12}',\r\n '{\"q\":-10,\"r\":-1,\"s\":11}',\r\n '{\"q\":-11,\"r\":0,\"s\":11}',\r\n '{\"q\":-11,\"r\":1,\"s\":10}',\r\n '{\"q\":-12,\"r\":2,\"s\":10}',\r\n '{\"q\":-12,\"r\":3,\"s\":9}',\r\n '{\"q\":-13,\"r\":4,\"s\":9}',\r\n '{\"q\":-13,\"r\":5,\"s\":8}',\r\n '{\"q\":-14,\"r\":6,\"s\":8}',\r\n '{\"q\":-14,\"r\":7,\"s\":7}',\r\n '{\"q\":-15,\"r\":8,\"s\":7}',\r\n '{\"q\":-7,\"r\":-7,\"s\":14}',\r\n '{\"q\":-6,\"r\":-7,\"s\":13}',\r\n '{\"q\":-6,\"r\":-6,\"s\":12}',\r\n '{\"q\":10,\"r\":-8,\"s\":-2}',\r\n '{\"q\":8,\"r\":-6,\"s\":-2}',\r\n '{\"q\":9,\"r\":-7,\"s\":-2}',\r\n '{\"q\":7,\"r\":-5,\"s\":-2}',\r\n '{\"q\":5,\"r\":-3,\"s\":-2}',\r\n '{\"q\":6,\"r\":-4,\"s\":-2}',\r\n '{\"q\":4,\"r\":-2,\"s\":-2}',\r\n'{\"q\":4,\"r\":1,\"s\":-5}',\r\n '{\"q\":5,\"r\":0,\"s\":-5}',\r\n'{\"q\":6,\"r\":-1,\"s\":-5}',\r\n '{\"q\":4,\"r\":8,\"s\":-12}',\r\n '{\"q\":5,\"r\":6,\"s\":-11}',\r\n '{\"q\":4,\"r\":7,\"s\":-11}',\r\n '{\"q\":7,\"r\":4,\"s\":-11}',\r\n '{\"q\":6,\"r\":5,\"s\":-11}',\r\n'{\"q\":13,\"r\":-8,\"s\":-5}',\r\n '{\"q\":12,\"r\":-7,\"s\":-5}',\r\n '{\"q\":11,\"r\":-6,\"s\":-5}',\r\n '{\"q\":10,\"r\":-6,\"s\":-4}',\r\n '{\"q\":2,\"r\":1,\"s\":-3}',\r\n '{\"q\":1,\"r\":2,\"s\":-3}',\r\n '{\"q\":0,\"r\":3,\"s\":-3}',\r\n '{\"q\":-1,\"r\":4,\"s\":-3}',\r\n '{\"q\":-3,\"r\":6,\"s\":-3}',\r\n '{\"q\":-4,\"r\":7,\"s\":-3}',\r\n '{\"q\":-2,\"r\":5,\"s\":-3}',\r\n '{\"q\":3,\"r\":1,\"s\":-4}',\r\n '{\"q\":-8,\"r\":1,\"s\":7}',\r\n '{\"q\":-8,\"r\":2,\"s\":6}',\r\n '{\"q\":-8,\"r\":3,\"s\":5}',\r\n '{\"q\":-8,\"r\":4,\"s\":4}',\r\n '{\"q\":-8,\"r\":5,\"s\":3}',\r\n '{\"q\":-8,\"r\":7,\"s\":1}',\r\n '{\"q\":-8,\"r\":6,\"s\":2}',\r\n '{\"q\":-8,\"r\":8,\"s\":0}',\r\n '{\"q\":-9,\"r\":6,\"s\":3}',\r\n '{\"q\":-10,\"r\":7,\"s\":3}',\r\n '{\"q\":-5,\"r\":-1,\"s\":6}',\r\n '{\"q\":-5,\"r\":-2,\"s\":7}',\r\n '{\"q\":-5,\"r\":-3,\"s\":8}',\r\n '{\"q\":-5,\"r\":-4,\"s\":9}',\r\n '{\"q\":-5,\"r\":-5,\"s\":10}',\r\n '{\"q\":-5,\"r\":-6,\"s\":11}',\r\n '{\"q\":-2,\"r\":-4,\"s\":6}',\r\n '{\"q\":-1,\"r\":-4,\"s\":5}',\r\n '{\"q\":0,\"r\":-4,\"s\":4}',\r\n '{\"q\":-3,\"r\":-4,\"s\":7}',\r\n '{\"q\":2,\"r\":-5,\"s\":3}',\r\n '{\"q\":3,\"r\":-5,\"s\":2}',\r\n '{\"q\":0,\"r\":-2,\"s\":2}',\r\n '{\"q\":1,\"r\":-2,\"s\":1}',\r\n '{\"q\":2,\"r\":-3,\"s\":1}',\r\n'{\"q\":3,\"r\":-4,\"s\":1}',\r\n '{\"q\":0,\"r\":-3,\"s\":3}',\r\n \r\n]\r\nexport default class BFS extends  React.Component{\r\n\r\n    constructor(props)\r\n    { \r\n        super(props);\r\n        this.handleMouseMove=this.handleMouseMove.bind(this);\r\n      this.handleClick=this.handleClick.bind(this);\r\n        this.state={\r\n            hexSize:20,\r\n            hexOrigin: {x:400,y:300},\r\n            currentHex:{q:0,r:0,s:0,x:0,y:0},\r\n           obstacles: DUMMY_OBSTACLES,\r\n          playerPosition: {q:0,r:0,s:0},\r\n          cameFrom:{},\r\n          hexPath:[],\r\n          path:[]\r\n        }\r\n\r\n    } \r\n  \r\n    componentWillMount(){\r\n        let hexParametres=this.getHexParametres();\r\n        this.setState({\r\n            canvasSize:{canvasWidth:800,canvasHeight:600},\r\n             hexParametres: hexParametres\r\n        })\r\n\r\n        console.log(\"componentWillM working\");\r\n   \r\n    }\r\ncomponentDidMount(){\r\nconsole.log(\"DidMountWorking-ShivamSolanki\");\r\n\r\n    const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n    this.canvasHex.width=canvasWidth;\r\n    this.canvasHex.height=canvasHeight;\r\n    this.canvasInteraction.width=canvasWidth;\r\n    this.canvasInteraction.height=canvasHeight;\r\n   this.canvasView.width=canvasWidth;\r\n   this.canvasView.height=canvasHeight;\r\n    this.getCanvasPosition(this.canvasInteraction);\r\n   this.drawHex(this.canvasInteraction,this.Point(this.state.playerPosition.x,this.state.playerPosition.y),1,\"black\",\"grey\",0.2);\r\n    this.drawHexes();\r\n    this.drawObstacles();\r\n}\r\nshouldComponentUpdate(nextProps,nextState){\r\n    if(nextState.currentHex!==this.state.currentHex){\r\n        const{q,r,s,x,y}=nextState.currentHex;\r\n        const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n       const ctx=this.canvasInteraction.getContext(\"2d\");\r\n       ctx.clearRect(0,0,canvasWidth,canvasHeight);\r\n    this.drawPath();\r\n    \r\n    return true;\r\n    }\r\n    if(nextState.cameFrom!==this.state.cameFrom){\r\n        const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n        const ctx=this.canvasView.getContext(\"2d\");\r\n        ctx.clearRect(0,0,canvasWidth,canvasHeight);\r\n        for(let  l in nextState.cameFrom){\r\n            const{q,r,s}=JSON.parse(l);\r\n            const{x,y}=this.hexToPixel(this.Hex(q,r));\r\n            this.drawHex(this.canvasView,this.Point(x,y),1,\"black\",\"grey\",0.1);\r\n            var from= JSON.parse(nextState.cameFrom[l]);\r\n            var fromCoord=this.hexToPixel(this.Hex(from.q,from.r));\r\n            this.drawArrow(fromCoord.x,fromCoord.y,x,y);\r\n        }\r\n        return true;\r\n    }\r\nreturn false;\r\n    \r\n}\r\n getHexCornerCoord(center, i){\r\n    let angle_deg = 60 * i +30;\r\n    let angle_rad = Math.PI / 180 * angle_deg;\r\n    let x=center.x +this.state.hexSize * Math.cos(angle_rad);\r\n\r\n    let y=center.y + this.state.hexSize * Math.sin(angle_rad);\r\n    return this.Point(x,y);\r\n}\r\nPoint(x,y){\r\n    return {x: x,y: y}\r\n}\r\ndrawHex(canvasID,center,lineWidth,lineColor,fillColor){\r\n    for(let i=0;i<=5;i++)\r\n    {\r\n        let start=this.getHexCornerCoord(center,i);\r\n        let end=this.getHexCornerCoord(center,i+1);\r\n        this.fillHex(canvasID,center,fillColor);\r\n        this.drawLine(canvasID,start,end,lineWidth,lineColor);\r\n    }\r\n}\r\n\r\ndrawLine(canvasID,start,end,lineWidth,lineColor)\r\n{\r\n    const ctx=canvasID.getContext(\"2d\");\r\n      ctx.beginPath();\r\n    ctx.moveTo(start.x,start.y);\r\n    ctx.strokeStyle=lineColor;\r\n    ctx.lineWidth=lineWidth;\r\n\r\n    ctx.lineTo(end.x,end.y);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n}\r\ndrawHexes(){\r\n    const{canvasWidth,canvasHeight}=this.state.canvasSize;\r\n    const{hexWidth,hexHeight,verDist,horizDist}=this.state.hexParametres;\r\n    const hexOrigin=this.state.hexOrigin;\r\n    let qLeftSide=Math.round(hexOrigin.x/hexWidth)*4;\r\n    let qRightSide=Math.round(canvasWidth-hexOrigin.x)/hexWidth*2;\r\n      let rTopSide=Math.round(hexOrigin.y/(hexHeight/2));\r\n      let rBottomSide=Math.round((canvasHeight-hexOrigin.y)/(hexHeight/2));\r\n    var hexPathMap=[];\r\n      var p=0;\r\n      for(let r=0;r<=rBottomSide;r++){\r\n          if(r%2===0&&r!==0)\r\n          {\r\n              p++;\r\n          }\r\n          for(let q=-qLeftSide;q<=qRightSide;q++)\r\n          {\r\n              const{x,y}=this.hexToPixel(this.Hex(q-p,r))\r\n              if((x>hexWidth/2&&x<canvasWidth-hexWidth/2)&& (y>hexHeight/2&&y<canvasHeight-hexHeight/2)){\r\n                  this.drawHex(this.canvasHex,this.Point(x,y),\"black\",1,\"grey\");\r\n                 // this.drawHexCoordinates(this.canvasHex,this.Point(x,y),this.Hex(q-p,r,-(q-p)-r));\r\n              var bottomH=JSON.stringify(this.Hex(q-p,r,-(q-p)-r));\r\n              if(!this.state.obstacles.includes(bottomH))\r\n              {\r\n                  hexPathMap.push(bottomH);\r\n              }\r\n                }\r\n          }\r\n         \r\n      }\r\n      var n=0;\r\n      for(let r=-1;r>=-rTopSide;r--)\r\n      {\r\n          if(r%2!==0)\r\n          {\r\n              n++;\r\n\r\n          }\r\n          for(let q=-qLeftSide;q<=qRightSide;q++)\r\n          {\r\n              const{x,y}=this.hexToPixel(this.Hex(q+n,r));\r\n              if((x>hexWidth/2&&x<canvasWidth-hexWidth/2)&&(y>hexHeight/2&&y<canvasHeight-hexHeight/2)){\r\n                     this.drawHex(this.canvasHex,this.Point(x,y),\"black\",1,\"grey\");\r\n                    // this.drawHexCoordinates(this.canvasHex,this.Point(x,y),this.Hex(q+n,r,-(q+n)-r));\r\n             var topH=JSON.stringify(this.Hex(q+n,r,-(q+n)-r));\r\n             if(!this.state.obstacles.includes(topH)){\r\n                 hexPathMap.push(topH);\r\n             }\r\n                }\r\n          }\r\n          hexPathMap=[].concat(hexPathMap);\r\n          this.setState(\r\n              {hexPathMap: hexPathMap},\r\n              this.breadthFirstSearchCallback=()=>this.breadthFirstSearch(this.state.playerPosition)\r\n          )\r\n      }\r\n  \r\n}\r\nhexToPixel(h){let hexOrigin=this.state.hexOrigin;\r\n    let x = this.state.hexSize * Math.sqrt(3) * (h.q  +h.r/2)+hexOrigin.x;;\r\n    let y = this.state.hexSize * (                         3/2 * h.r)+hexOrigin.y;\r\n    return this.Point(x, y);\r\n} \r\n\r\ndrawHexCoordinates(canvasID,center,h)\r\n{\r\n    const ctx=canvasID.getContext(\"2d\");\r\n    ctx.fillText(h.q,center.x+6,center.y);\r\n    ctx.fillText(h.r,center.x-3,center.y+15);\r\n    ctx.fillText(h.s,center.x-12,center.y);\r\n\r\n}\r\n\r\nHex(q,r,s){\r\n    return {q: q,r: r,s: s}\r\n}\r\ngetHexParametres(){\r\n    let hexHeight=this.state.hexSize*2;\r\n    let hexWidth=Math.sqrt(3)/2*hexHeight;\r\n    let verDist=hexHeight*3/4;\r\n    let horizDist=hexWidth;\r\n    return {hexWidth,hexHeight,verDist,horizDist}\r\n}\r\nhandleMouseMove(e){\r\n    const{left,right,top,bottom}=this.state.canvasPosition;\r\nconst{canvasWidth,canvasHeight}=this.state.canvasSize;\r\nconst{hexWidth,hexHeight,verDist,horizDist}=this.state.hexParametres;\r\n    let offsetX=e.pageX-left;\r\n    let offsetY=e.pageY-top;\r\n    let playerPosition=this.state.playerPosition; \r\n    const{q,r,s}=this.cubeRound(this.pixelToHex(this.Point(offsetX,offsetY)));\r\n      const{x,y}=this.hexToPixel(this.Hex(q,r,s));\r\n      this.getDistanceLine(this.Hex(0,0,0),this.Hex(q,r,s));\r\n \r\n      this.getPath(this.Hex(playerPosition.q,playerPosition.r,playerPosition.s),this.Hex(q,r,s));\r\n    if((x>hexWidth/2&&x<canvasWidth-hexWidth/2)&&(y>hexHeight/2&&y<canvasHeight-hexHeight/2)){\r\n      this.setState({\r\n          currentHex:{q,r,s,x,y}\r\n      })}\r\n    }\r\ngetCanvasPosition(canvasID)\r\n{\r\n    let rect=canvasID.getBoundingClientRect();\r\n    this.setState({\r\n        canvasPosition: {left: rect.left,right:  rect.right,top: rect.top,bottom:  rect.bottom}\r\n    })\r\n}\r\npixelToHex(p){\r\n    let size=this.state.hexSize;\r\n    let origin=this.state.hexOrigin;\r\n    var q = ((p.x-origin.x)*Math.sqrt(3)/3-(p.y-origin.y)/3) / size\r\n    var r = (p.y-origin.y)*2/3/ size\r\n    return this.Hex(q,r,-q-r);\r\n}\r\n\r\ncubeRound(cube)\r\n {   var rx = Math.round(cube.q)\r\n    var ry =Math.round(cube.r)\r\n    var rz =Math.round(cube.s)\r\n    \r\n    var x_diff = Math.abs(rx - cube.q)\r\n    var y_diff = Math.abs(ry - cube.r)\r\n    var z_diff = Math.abs(rz - cube.s)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff){\r\n        rx = -ry-rz\r\n    }\r\n    else if( y_diff > z_diff)\r\n       { ry = -rx-rz}\r\n    else{\r\n        rz = -rx-ry\r\n    }\r\n   \r\n    return this.Hex(rx, ry, rz);\r\n}\r\n\r\ncubeDirections(direction){\r\n    const cubeDirections=[this.Hex(1,0,-1),this.Hex(1,-1,0),this.Hex(0,-1,1),this.Hex(-1,0,1),this.Hex(-1,1,0),this.Hex(0,1,-1)];\r\n    return cubeDirections[direction];\r\n}\r\ncubeAdd(a,b){\r\n    return this.Hex(a.q+b.q ,a.r+b.r ,a.s+b.s);\r\n}\r\ncubeSubstract(hexA,hexB){\r\n   \r\n    return this.Hex(hexA.q-hexB.q,hexA.r-hexB.r,hexA.s-hexB.s);\r\n}\r\ngetCubeNeighbor(h,direction){\r\n    return this.cubeAdd(h,this.cubeDirections(direction));\r\n\r\n}\r\ndrawNeighbors(h){\r\n    for(let i=0;i<=5;i++)\r\n    {\r\n        const{q,r,s}=this.getCubeNeighbor(this.Hex(h.q,h.r,h.s),i);\r\n       const{x,y}=this.hexToPixel(this.Hex(q,r,s));\r\n       this.drawHex(this.canvasInteraction,this.Point(x,y),\"red\",2);\r\n    }\r\n}\r\ncubeDistance(hexA,hexB)\r\n{\r\n    const{q,r,s}=this.cubeSubstract(hexA,hexB);\r\n    return (Math.abs(q)+Math.abs(r)+Math.abs(s))/2;\r\n}\r\n\r\n\r\nlinearInt(a,b,t)\r\n{\r\n    return (a+(b-a)*t)\r\n}\r\ncubeLinearInt(hexA,hexB,t)\r\n{\r\n    return this.Hex(this.linearInt(hexA.q,hexB.q,t),this.linearInt(hexA.r,hexB.r,t),this.linearInt(hexA.s,hexB.s,t));\r\n}\r\ngetDistanceLine(hexA,hexB)\r\n{\r\n    let dist=this.cubeDistance(hexA,hexB);\r\n    \r\n    var arr=[];\r\n    for(let i=0;i<=dist;i++)\r\n    {\r\n        let center=this.hexToPixel(this.cubeRound(this.cubeLinearInt(hexA,hexB,1.0/dist*i)));\r\n        arr=[].concat(arr,center);\r\n\r\n    }\r\n    this.setState({\r\n        currentDistanceLine:arr\r\n    })\r\n}\r\n\r\nfillHex(canvasID,center,fillColor){\r\n    let c0=this.getHexCornerCoord(center,0);\r\n    let c1=this.getHexCornerCoord(center,1);\r\n    let c2=this.getHexCornerCoord(center,2);\r\n    let c3=this.getHexCornerCoord(center,3);\r\n    let c4=this.getHexCornerCoord(center,4);\r\n    let c5=this.getHexCornerCoord(center,5);\r\n    const ctx= canvasID.getContext(\"2d\");\r\n    ctx.beginPath();\r\n    ctx.fillStyle=fillColor;\r\n    ctx.globalAlpha=0.1;\r\n    ctx.moveTo(c0.x,c0.y);\r\n    ctx.lineTo(c1.x,c1.y);\r\n    ctx.lineTo(c2.x,c2.y);\r\n    ctx.lineTo(c3.x,c3.y);\r\n    ctx.lineTo(c4.x,c4.y);\r\n     ctx.lineTo(c5.x,c5.y);\r\n     ctx.closePath();\r\n     ctx.fill();\r\n}\r\nhandleClick(){const{currentHex,cameFrom}=this.state;\r\nconst{q,r,s}=currentHex;\r\nif(cameFrom[JSON.stringify(this.Hex(q,r,s))]){\r\n    this.setState(\r\n        {playerPosition:this.Hex(q,r,s)},\r\n        this.breadthFirstSearchCallback=()=>this.breadthFirstSearch(this.state.playerPosition) \r\n    )\r\n}\r\n\r\n}\r\ndrawObstacles(){\r\n    this.state.obstacles.map((l)=>{\r\n        const{q,r,s}=JSON.parse(l);\r\n        const{x,y}=this.hexToPixel(this.Hex(q,r,s));\r\n        this.drawHex(this.canvasHex,this.Point(x,y),1,\"black\",\"black\")\r\n    })\r\n}\r\ngetCubeNeighbors(h){\r\n    var arr=[];\r\n    for(let i=0;i<=5;i++)\r\n    {\r\n        const {q,r,s}=this.getCubeNeighbor(this.Hex(h.q,h.r,h.s),i);\r\n        arr.push(this.Hex(q,r,s));\r\n    }\r\n    return arr;\r\n}\r\nbreadthFirstSearch(playerPosition){\r\n    var frontier=[playerPosition];\r\n    var cameFrom={};\r\n    cameFrom[JSON.stringify(playerPosition)]=JSON.stringify(playerPosition);\r\n    while(frontier.length!=0){\r\n        var current=frontier.shift();\r\n        let arr=this.getCubeNeighbors(current);\r\n        arr.map((l)=>{\r\n            if(!cameFrom.hasOwnProperty(JSON.stringify(l))&&this.state.hexPathMap.includes(JSON.stringify(l))){\r\n                frontier.push(l);\r\n                cameFrom[JSON.stringify(l)]=JSON.stringify(current);\r\n            }\r\n        })\r\n    }\r\n     cameFrom=Object.assign({},cameFrom);\r\n     this.setState({\r\n         cameFrom:cameFrom\r\n     })\r\n}\r\ngetPath(start,current)\r\n{\r\n    const{cameFrom}=this.state;\r\n    start=JSON.stringify(start);\r\n    current=JSON.stringify(current);\r\n    if(cameFrom[current]!=undefined){\r\n        var path=[current];\r\n        while(current!=start){\r\n            current=cameFrom[current];\r\n            path.push(current);\r\n        }\r\n    \r\n        path=[].concat(path);\r\n        this.setState({\r\n            path:path\r\n        })\r\n    }\r\n  \r\n}\r\ndrawPath(){\r\n    let path=this.state.path;\r\n    for(let i=0;i<=path.length-1;i++)\r\n    {\r\n        const{q,r}=JSON.parse(path[i]);\r\n        const{x,y}=this.hexToPixel(this.Hex(q,r));\r\n        this.drawHex(this.canvasInteraction,this.Point(x,y),1,\"black\",\"#05b9f5\");\r\n    }\r\n}\r\ndrawArrow(fromx,fromy,tox,toy)\r\n{\r\n    var ctx=this.canvasView.getContext(\"2d\");\r\n    var headlen=5;\r\n    var angle=Math.atan2(toy-fromy,tox-fromx);\r\n    ctx.beginPath();\r\n    ctx.moveTo(fromx,fromy);\r\n    ctx.lineTo(tox,toy);\r\n    ctx.strokeStyle=\"red\";\r\n    ctx.lineWidth=3;\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(tox,toy);\r\n    ctx.globalAlpha=0.3;\r\n    ctx.lineTo(tox-headlen*Math.cos(angle-Math.PI/7),toy-headlen*Math.sin(angle-Math.PI/7));\r\n    ctx.lineTo(tox-headlen*Math.cos(angle+Math.PI/7),toy-headlen*Math.sin(angle+Math.PI/7));\r\n    ctx.lineTo(tox,toy);\r\n    ctx.lineTo(tox-headlen*Math.cos(angle-Math.PI/7),toy-headlen*Math.sin(angle-Math.PI/7));\r\n    ctx.strokeStyle=\"red\";\r\n    ctx.lineWidth=5;\r\n    ctx.stroke();\r\n    ctx.fillStyle=\"red\";\r\n    ctx.fill();\r\n}\r\n  render(){\r\n        return (\r\n            <div className=\"BFS\">\r\n                <canvas ref={canvasHex=>this.canvasHex = canvasHex} ></canvas>\r\n               <canvas ref={canvasCoordinates=>this.canvasCoordinates=canvasCoordinates}></canvas>\r\n               <canvas ref={canvasView=>this.canvasView=canvasView}></canvas>\r\n              <canvas ref={canvasInteraction=>this.canvasInteraction=canvasInteraction} onMouseMove={this.handleMouseMove}\r\n              onClick={this.handleClick}></canvas>\r\n            </div>\r\n        )\r\n    }\r\n} ",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"53","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":16},{"ruleId":"48","severity":1,"message":"54","line":188,"column":15,"nodeType":"50","messageId":"51","endLine":188,"endColumn":16},{"ruleId":"48","severity":1,"message":"55","line":188,"column":17,"nodeType":"50","messageId":"51","endLine":188,"endColumn":18},{"ruleId":"48","severity":1,"message":"56","line":188,"column":19,"nodeType":"50","messageId":"51","endLine":188,"endColumn":20},{"ruleId":"48","severity":1,"message":"57","line":188,"column":21,"nodeType":"50","messageId":"51","endLine":188,"endColumn":22},{"ruleId":"48","severity":1,"message":"58","line":188,"column":23,"nodeType":"50","messageId":"51","endLine":188,"endColumn":24},{"ruleId":"48","severity":1,"message":"56","line":201,"column":23,"nodeType":"50","messageId":"51","endLine":201,"endColumn":24},{"ruleId":"48","severity":1,"message":"59","line":248,"column":30,"nodeType":"50","messageId":"51","endLine":248,"endColumn":37},{"ruleId":"48","severity":1,"message":"60","line":248,"column":38,"nodeType":"50","messageId":"51","endLine":248,"endColumn":47},{"ruleId":"48","severity":1,"message":"61","line":330,"column":16,"nodeType":"50","messageId":"51","endLine":330,"endColumn":21},{"ruleId":"48","severity":1,"message":"62","line":330,"column":26,"nodeType":"50","messageId":"51","endLine":330,"endColumn":32},{"ruleId":"48","severity":1,"message":"59","line":332,"column":26,"nodeType":"50","messageId":"51","endLine":332,"endColumn":33},{"ruleId":"48","severity":1,"message":"60","line":332,"column":34,"nodeType":"50","messageId":"51","endLine":332,"endColumn":43},{"ruleId":"63","severity":1,"message":"64","line":467,"column":33,"nodeType":"65","messageId":"66","endLine":467,"endColumn":35},{"ruleId":"67","severity":1,"message":"68","line":486,"column":26,"nodeType":"69","messageId":"70","endLine":486,"endColumn":28},{"ruleId":"71","severity":1,"message":"72","line":489,"column":17,"nodeType":"65","messageId":"73","endLine":494,"endColumn":10},{"ruleId":"63","severity":1,"message":"64","line":489,"column":20,"nodeType":"65","messageId":"66","endLine":489,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":506,"column":25,"nodeType":"69","messageId":"70","endLine":506,"endColumn":27},{"ruleId":"67","severity":1,"message":"68","line":508,"column":22,"nodeType":"69","messageId":"70","endLine":508,"endColumn":24},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'q' is assigned a value but never used.","'r' is assigned a value but never used.","'s' is assigned a value but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'verDist' is assigned a value but never used.","'horizDist' is assigned a value but never used.","'right' is assigned a value but never used.","'bottom' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'cameFrom', 'cameFrom', 'current'.","unsafeRefs","no-global-assign","no-unsafe-negation"]